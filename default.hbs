<!doctype html>
<html class="no-js" lang="en" data-user-color-scheme="light">

<head>
    {{!-- Document Settings --}}
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    {{!-- dark-mode --}}
    <script>
        // =====================
		// https://hankchizljaw.com/wrote/create-a-user-controlled-dark-or-light-mode/
		// =====================
		var user_color_scheme = localStorage.getItem('user-color-scheme');
		function initial_mode_set(mode) {
		if (mode) {
		document.documentElement.setAttribute('data-user-color-scheme', mode);
		}
		}
		initial_mode_set(user_color_scheme);
		window.addEventListener('DOMContentLoaded', (event) => {
		document.documentElement.classList.remove('no-js');
		var STORAGE_KEY = 'user-color-scheme';
		var COLOR_MODE_KEY = '--color-mode';
		var modeToggleButton = document.querySelector('.js-mode-toggle');
		//var modeToggleText = document.querySelector('.js-mode-toggle-text');
		var modeStatusElement = document.querySelector('.js-mode-status');

		var getCSSCustomProp = function getCSSCustomProp(propKey) {
		var response = getComputedStyle(document.documentElement).getPropertyValue(propKey);
		if (response.length) {
		response = response.replace(/\"/g, '').trim();
		}
		return response;
		};
		var applySetting = function applySetting(passedSetting) {
		var currentSetting = passedSetting || localStorage.getItem(STORAGE_KEY);
		if (currentSetting) {
		document.documentElement.setAttribute('data-user-color-scheme', currentSetting);
		//        setButtonLabelAndStatus(currentSetting);
		}
		//	  else {
		//        setButtonLabelAndStatus(getCSSCustomProp(COLOR_MODE_KEY));
		//      }
		};
		/*
		var setButtonLabelAndStatus = function setButtonLabelAndStatus(currentSetting) {
		modeToggleText.innerText =  "Enable ".concat(currentSetting === 'dark' ? 'light' : 'dark', " mode");
		};
		*/
		var toggleSetting = function toggleSetting() {
		var currentSetting = localStorage.getItem(STORAGE_KEY);
		switch (currentSetting) {
		case null:
		currentSetting = getCSSCustomProp(COLOR_MODE_KEY) === 'dark' ? 'light' : 'dark';
		break;
		case 'light':
		currentSetting = 'dark';
		break;
		case 'dark':
		currentSetting = 'light';
		break;
		}
		localStorage.setItem(STORAGE_KEY, currentSetting);
		return currentSetting;
		};
		modeToggleButton.addEventListener('click', function (evt) {
		evt.preventDefault();
		applySetting(toggleSetting());
		});
		applySetting();
		});
		</script>
    {{!-- Base Meta --}}
    <title>{{meta_title}} | {{@blog.title}}</title>
    {{^is "index"}}
    <meta name="twitter:image" content="https://res.cloudinary.com/cdvel/image/upload/w_2000,c_fit,co_rgb:232129,l_text:lato_140_alignment_center:{{meta_title}}/v1614691738/media/w_banner.webp">
    <meta name="og:image" content="https://res.cloudinary.com/cdvel/image/upload/w_2000,c_fit,co_rgb:232129,l_text:lato_140_alignment_center:{{meta_title}}/v1614691738/media/w_banner.webp">
    {{/is}}
    <meta name="HandheldFriendly" content="True" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    {{!-- Styles'n'Scripts --}}
    <!-- Place favicon.ico and apple-touch-icon(s) in the root directory -->
    <link href="{{asset "css/typography.css"}}" rel='stylesheet' type='text/css'>
    <link rel="stylesheet" href="{{asset "css/styles.css"}}">
    {{ghost_head}}
    <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.18.1/styles/night-owl.min.css" crossorigin="anonymous">
    <script src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.18.1/highlight.min.js" crossorigin="anonymous"></script>
    <script>
    hljs.initHighlightingOnLoad();
    </script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/tocbot/4.11.1/tocbot.min.js" integrity="sha256-CfQUUe5nCr0s8VaB1dPISX25JmwUHVRabMji+YUFUS4=" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/tocbot/4.11.1/tocbot.css" integrity="sha256-XUbSD3m+xLW27W/mp9kMn+fI9AU2MoBkiMMSVVYWI+o=" crossorigin="anonymous" />
    <script type="text/javascript" crossorigin="anonymous">
    window.heap = window.heap || [], heap.load = function(e, t) { window.heap.appid = e, window.heap.config = t = t || {}; var r = document.createElement("script");
        r.type = "text/javascript", r.async = !0, r.src = "https://cdn.heapanalytics.com/js/heap-" + e + ".js"; var a = document.getElementsByTagName("script")[0];
        a.parentNode.insertBefore(r, a); for (var n = function(e) { return function() { heap.push([e].concat(Array.prototype.slice.call(arguments, 0))) } }, p = ["addEventProperties", "addUserProperties", "clearEventProperties", "identify", "resetIdentity", "removeEventProperty", "setEventProperties", "track", "unsetEventProperty"], o = 0; o < p.length; o++) heap[p[o]] = n(p[o]) };
    heap.load("4131685351");
    </script>
</head>

<body class="{{body_class}}">
    <!--[if lt IE 8]>
		<p class="browsehappy">You are using an <strong>outdated</strong> browser. Please <a href="http://browsehappy.com/">upgrade your browser</a> to improve your experience.</p>
		<![endif]-->
    <header class="site-header">
        <div>
            <a class="quote-header ir" href="#" aria-label="quote header">
                <div class="main-title"><label id="main-quote"></label></div>
                <div class="main-title" style="font-size: 20px;"><label id="main-quote-author"></label></div>
            </a>
        </div>
    </header>
    {{#is "index"}}
    <div>
        {{#get "posts" limit="1" include="authors"}}
        {{#foreach posts}}
        {{> author}}
        {{/foreach}}
        {{/get}}
    </div>
    {{/is}}
    <div class="header-title">
        <img style="height: 40px;" src="{{@site.logo}}" />
        <a href="/"> {{@blog.title}}</a>
    </div>
    {{navigation}}
    {{{body}}}
    <footer class="main-footer">
        <div class="container clearfix">
            <a class="icon-rss" href="{{@blog.url}}/rss/" title="RSS Feed"></a>
            <p>
                <a href="{{@blog.url}}" title="{{@blog.title}}">
                    {{@blog.title}}&copy; <script>
                    document.write(new Date().getFullYear())
                    </script>
                </a>
            </p>
        </div>
        <div style="display: grid; grid-template-columns: repeat(2, 1fr);">
                <div class="floating-controls">
                    <div class="to-top" onclick="window.scrollTo(0, 0);">
                        <span>⌃</span>
                    </div>

                    <div alt="toggle dark mode" style="text-align: center;">
                        <div role="status" class="[ visually-hidden ][ js-mode-status ]"></div>
                        <button class="[ toggle-button ] [ js-mode-toggle ]">
                            <span>☀</span>
                        </button>
                    </div>
                </div>
          </div>
    </footer>
    {{ghost_foot}}
    <script src="{{asset "js/main.js"}}"></script>
    <script>
    var images = document.querySelectorAll('.kg-gallery-image img');
    images.forEach(function(image) {
        var container = image.closest('.kg-gallery-image');
        var width = image.attributes.width.value;
        var height = image.attributes.height.value;
        var ratio = width / height;
        container.style.flex = ratio + ' 1 0%';
    });

    var toppy = document.querySelector('.to-top');
	window.addEventListener('scroll', function() {
	    if(window.scrollY > 399) {
	        var toppy = document.querySelector('.to-top');
	        toppy.style.display = block;
	    }else{
			toppy.style.display = none;
	    }
	});

    </script>
</body>

</html>